name: Deploy TSV Rot Trainer to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install and Build
      run: |
        npm ci
        npm run build

    - name: Create Express Server
      run: |
        cat > dist/server.js << 'EOF'
        const express = require('express');
        const path = require('path');
        const app = express();
        
        app.use(express.static(__dirname));
        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'index.html'));
        });
        
        const PORT = process.env.PORT || 8181;
        app.listen(PORT, () => console.log(`Server on ${PORT}`));
        EOF

    - name: Create package.json
      run: |
        cat > dist/package.json << 'EOF'
        {
          "name": "tsvrot-trainer",
          "version": "1.0.0",
          "scripts": {
            "start": "node server.js"
          },
          "dependencies": {
            "express": "^4.18.2"
          }
        }
        EOF

    - name: Install Express
      run: |
        cd dist
        npm install --production

    - name: Create tar.gz and verify
      run: |
        cd dist
        tar -czf ../deploy.tar.gz .
        cd ..
        ls -lh deploy.tar.gz
        echo "Archive created at: $(pwd)/deploy.tar.gz"

    - name: Deploy to Azure
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'tsvrot-trainer-2025'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ github.workspace }}/deploy.tar.gz
